note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PLLABEL_DEFAULTS_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	exp_label_disp: REAL_64
			-- Access member `exp_label_disp`
		require
			exists: exists
		do
			Result := c_exp_label_disp (item)
		ensure
			result_correct: Result = c_exp_label_disp (item)
		end

	set_exp_label_disp (a_value: REAL_64) 
			-- Change the value of member `exp_label_disp` to `a_value`.
		require
			exists: exists
		do
			set_c_exp_label_disp (item, a_value)
		ensure
			exp_label_disp_set: a_value = exp_label_disp
		end

	exp_label_pos: REAL_64
			-- Access member `exp_label_pos`
		require
			exists: exists
		do
			Result := c_exp_label_pos (item)
		ensure
			result_correct: Result = c_exp_label_pos (item)
		end

	set_exp_label_pos (a_value: REAL_64) 
			-- Change the value of member `exp_label_pos` to `a_value`.
		require
			exists: exists
		do
			set_c_exp_label_pos (item, a_value)
		ensure
			exp_label_pos_set: a_value = exp_label_pos
		end

	exp_label_just: REAL_64
			-- Access member `exp_label_just`
		require
			exists: exists
		do
			Result := c_exp_label_just (item)
		ensure
			result_correct: Result = c_exp_label_just (item)
		end

	set_exp_label_just (a_value: REAL_64) 
			-- Change the value of member `exp_label_just` to `a_value`.
		require
			exists: exists
		do
			set_c_exp_label_just (item, a_value)
		ensure
			exp_label_just_set: a_value = exp_label_just
		end

feature {NONE} -- Implementation wrapper for struct PLLabelDefaults

	sizeof_external: INTEGER 
		external
			"C inline use <plplot.h>"
		alias
			"sizeof(PLLabelDefaults)"
		end

	c_exp_label_disp (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_disp
			]"
		end

	set_c_exp_label_disp (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_disp =  (PLFLT)$a_value
			]"
		ensure
			exp_label_disp_set: a_value = c_exp_label_disp (an_item)
		end

	c_exp_label_pos (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_pos
			]"
		end

	set_c_exp_label_pos (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_pos =  (PLFLT)$a_value
			]"
		ensure
			exp_label_pos_set: a_value = c_exp_label_pos (an_item)
		end

	c_exp_label_just (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_just
			]"
		end

	set_c_exp_label_just (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLLabelDefaults*)$an_item)->exp_label_just =  (PLFLT)$a_value
			]"
		ensure
			exp_label_just_set: a_value = c_exp_label_just (an_item)
		end

end
