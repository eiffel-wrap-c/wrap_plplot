note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class LLDIV_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	quot: INTEGER
			-- Access member `quot`
		require
			exists: exists
		do
			Result := c_quot (item)
		ensure
			result_correct: Result = c_quot (item)
		end

	set_quot (a_value: INTEGER) 
			-- Change the value of member `quot` to `a_value`.
		require
			exists: exists
		do
			set_c_quot (item, a_value)
		ensure
			quot_set: a_value = quot
		end

	rem: INTEGER
			-- Access member `rem`
		require
			exists: exists
		do
			Result := c_rem (item)
		ensure
			result_correct: Result = c_rem (item)
		end

	set_rem (a_value: INTEGER) 
			-- Change the value of member `rem` to `a_value`.
		require
			exists: exists
		do
			set_c_rem (item, a_value)
		ensure
			rem_set: a_value = rem
		end

feature {NONE} -- Implementation wrapper for struct struct _lldiv_t

	sizeof_external: INTEGER 
		external
			"C inline use <plplot.h>"
		alias
			"sizeof(struct _lldiv_t)"
		end

	c_quot (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((struct _lldiv_t*)$an_item)->quot
			]"
		end

	set_c_quot (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((struct _lldiv_t*)$an_item)->quot =  (long long)$a_value
			]"
		ensure
			quot_set: a_value = c_quot (an_item)
		end

	c_rem (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((struct _lldiv_t*)$an_item)->rem
			]"
		end

	set_c_rem (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((struct _lldiv_t*)$an_item)->rem =  (long long)$a_value
			]"
		ensure
			rem_set: a_value = c_rem (an_item)
		end

end
