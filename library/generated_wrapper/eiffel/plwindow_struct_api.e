note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PLWINDOW_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	dxmi: REAL_64
			-- Access member `dxmi`
		require
			exists: exists
		do
			Result := c_dxmi (item)
		ensure
			result_correct: Result = c_dxmi (item)
		end

	set_dxmi (a_value: REAL_64) 
			-- Change the value of member `dxmi` to `a_value`.
		require
			exists: exists
		do
			set_c_dxmi (item, a_value)
		ensure
			dxmi_set: a_value = dxmi
		end

	dxma: REAL_64
			-- Access member `dxma`
		require
			exists: exists
		do
			Result := c_dxma (item)
		ensure
			result_correct: Result = c_dxma (item)
		end

	set_dxma (a_value: REAL_64) 
			-- Change the value of member `dxma` to `a_value`.
		require
			exists: exists
		do
			set_c_dxma (item, a_value)
		ensure
			dxma_set: a_value = dxma
		end

	dymi: REAL_64
			-- Access member `dymi`
		require
			exists: exists
		do
			Result := c_dymi (item)
		ensure
			result_correct: Result = c_dymi (item)
		end

	set_dymi (a_value: REAL_64) 
			-- Change the value of member `dymi` to `a_value`.
		require
			exists: exists
		do
			set_c_dymi (item, a_value)
		ensure
			dymi_set: a_value = dymi
		end

	dyma: REAL_64
			-- Access member `dyma`
		require
			exists: exists
		do
			Result := c_dyma (item)
		ensure
			result_correct: Result = c_dyma (item)
		end

	set_dyma (a_value: REAL_64) 
			-- Change the value of member `dyma` to `a_value`.
		require
			exists: exists
		do
			set_c_dyma (item, a_value)
		ensure
			dyma_set: a_value = dyma
		end

	wxmi: REAL_64
			-- Access member `wxmi`
		require
			exists: exists
		do
			Result := c_wxmi (item)
		ensure
			result_correct: Result = c_wxmi (item)
		end

	set_wxmi (a_value: REAL_64) 
			-- Change the value of member `wxmi` to `a_value`.
		require
			exists: exists
		do
			set_c_wxmi (item, a_value)
		ensure
			wxmi_set: a_value = wxmi
		end

	wxma: REAL_64
			-- Access member `wxma`
		require
			exists: exists
		do
			Result := c_wxma (item)
		ensure
			result_correct: Result = c_wxma (item)
		end

	set_wxma (a_value: REAL_64) 
			-- Change the value of member `wxma` to `a_value`.
		require
			exists: exists
		do
			set_c_wxma (item, a_value)
		ensure
			wxma_set: a_value = wxma
		end

	wymi: REAL_64
			-- Access member `wymi`
		require
			exists: exists
		do
			Result := c_wymi (item)
		ensure
			result_correct: Result = c_wymi (item)
		end

	set_wymi (a_value: REAL_64) 
			-- Change the value of member `wymi` to `a_value`.
		require
			exists: exists
		do
			set_c_wymi (item, a_value)
		ensure
			wymi_set: a_value = wymi
		end

	wyma: REAL_64
			-- Access member `wyma`
		require
			exists: exists
		do
			Result := c_wyma (item)
		ensure
			result_correct: Result = c_wyma (item)
		end

	set_wyma (a_value: REAL_64) 
			-- Change the value of member `wyma` to `a_value`.
		require
			exists: exists
		do
			set_c_wyma (item, a_value)
		ensure
			wyma_set: a_value = wyma
		end

feature {NONE} -- Implementation wrapper for struct PLWindow

	sizeof_external: INTEGER 
		external
			"C inline use <plplot.h>"
		alias
			"sizeof(PLWindow)"
		end

	c_dxmi (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dxmi
			]"
		end

	set_c_dxmi (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dxmi =  (PLFLT)$a_value
			]"
		ensure
			dxmi_set: a_value = c_dxmi (an_item)
		end

	c_dxma (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dxma
			]"
		end

	set_c_dxma (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dxma =  (PLFLT)$a_value
			]"
		ensure
			dxma_set: a_value = c_dxma (an_item)
		end

	c_dymi (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dymi
			]"
		end

	set_c_dymi (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dymi =  (PLFLT)$a_value
			]"
		ensure
			dymi_set: a_value = c_dymi (an_item)
		end

	c_dyma (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dyma
			]"
		end

	set_c_dyma (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->dyma =  (PLFLT)$a_value
			]"
		ensure
			dyma_set: a_value = c_dyma (an_item)
		end

	c_wxmi (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wxmi
			]"
		end

	set_c_wxmi (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wxmi =  (PLFLT)$a_value
			]"
		ensure
			wxmi_set: a_value = c_wxmi (an_item)
		end

	c_wxma (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wxma
			]"
		end

	set_c_wxma (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wxma =  (PLFLT)$a_value
			]"
		ensure
			wxma_set: a_value = c_wxma (an_item)
		end

	c_wymi (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wymi
			]"
		end

	set_c_wymi (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wymi =  (PLFLT)$a_value
			]"
		ensure
			wymi_set: a_value = c_wymi (an_item)
		end

	c_wyma (an_item: POINTER): REAL_64
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wyma
			]"
		end

	set_c_wyma (an_item: POINTER; a_value: REAL_64) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLWindow*)$an_item)->wyma =  (PLFLT)$a_value
			]"
		ensure
			wyma_set: a_value = c_wyma (an_item)
		end

end
