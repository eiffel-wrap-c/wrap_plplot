note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class CORECRT_WSTDIO_FUNCTIONS_API


feature -- Access

	acrt_iob_func (ix: INTEGER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __acrt_iob_func ((unsigned)$ix);
			]"
		end

	fgetwc (stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_fgetwc (stream.item)
		end

	fgetwchar: INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _fgetwchar ();
			]"
		end

	fputwc (character: CHARACTER_32; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_fputwc (character.code, stream.item)
		end

	fputwchar (character: INTEGER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _fputwchar ((wchar_t)$character);
			]"
		end

	getwc (stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_getwc (stream.item)
		end

	getwchar: INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return getwchar ();
			]"
		end

	fgetws (buffer: STRING_32; buffercount: INTEGER; stream: _IOBUF_STRUCT_API): POINTER 
		do
			Result := c_fgetws ( (create {NATIVE_STRING}.make (buffer)).item, buffercount, stream.item)
		end

	fputws (buffer: STRING_32; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_fputws ( (create {NATIVE_STRING}.make (buffer)).item, stream.item)
		end

	getws_s (buffer: STRING_32; buffercount: INTEGER): POINTER 
		do
			Result := c_getws_s ( (create {NATIVE_STRING}.make (buffer)).item, buffercount)
		end

	putwc (character: CHARACTER_32; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_putwc (character.code, stream.item)
		end

	putwchar (character: INTEGER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return putwchar ((wchar_t)$character);
			]"
		end

	putws (buffer: STRING_32): INTEGER 
		do
			Result := c_putws ( (create {NATIVE_STRING}.make (buffer)).item)
		end

	ungetwc (character: INTEGER; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_ungetwc (character, stream.item)
		end

	wfdopen (filehandle: INTEGER; mode: STRING_32): detachable _IOBUF_STRUCT_API 
		do
			if attached c_wfdopen (filehandle,  (create {NATIVE_STRING}.make (mode)).item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	wfopen (filename: STRING_32; mode: STRING_32): detachable _IOBUF_STRUCT_API 
		do
			if attached c_wfopen ( (create {NATIVE_STRING}.make (filename)).item,  (create {NATIVE_STRING}.make (mode)).item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	wfopen_s (stream: _IOBUF_STRUCT_API; filename: STRING_32; mode: STRING_32): INTEGER 
		do
			Result := c_wfopen_s (stream.item,  (create {NATIVE_STRING}.make (filename)).item,  (create {NATIVE_STRING}.make (mode)).item)
		end

	wfreopen (filename: STRING_32; mode: STRING_32; oldstream: _IOBUF_STRUCT_API): detachable _IOBUF_STRUCT_API 
		do
			if attached c_wfreopen ( (create {NATIVE_STRING}.make (filename)).item,  (create {NATIVE_STRING}.make (mode)).item, oldstream.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	wfreopen_s (stream: _IOBUF_STRUCT_API; filename: STRING_32; mode: STRING_32; oldstream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_wfreopen_s (stream.item,  (create {NATIVE_STRING}.make (filename)).item,  (create {NATIVE_STRING}.make (mode)).item, oldstream.item)
		end

	wfsopen (filename: STRING_32; mode: STRING_32; shflag: INTEGER): detachable _IOBUF_STRUCT_API 
		do
			if attached c_wfsopen ( (create {NATIVE_STRING}.make (filename)).item,  (create {NATIVE_STRING}.make (mode)).item, shflag) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	wperror (errormessage: STRING_32) 
		do
			c_wperror ( (create {NATIVE_STRING}.make (errormessage)).item)
		end

	wpopen (command: STRING_32; mode: STRING_32): detachable _IOBUF_STRUCT_API 
		do
			if attached c_wpopen ( (create {NATIVE_STRING}.make (command)).item,  (create {NATIVE_STRING}.make (mode)).item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	wremove (filename: STRING_32): INTEGER 
		do
			Result := c_wremove ( (create {NATIVE_STRING}.make (filename)).item)
		end

	wtempnam (directory: STRING_32; fileprefix: STRING_32): POINTER 
		do
			Result := c_wtempnam ( (create {NATIVE_STRING}.make (directory)).item,  (create {NATIVE_STRING}.make (fileprefix)).item)
		end

	wtmpnam_s (buffer: STRING_32; buffercount: INTEGER): INTEGER 
		do
			Result := c_wtmpnam_s ( (create {NATIVE_STRING}.make (buffer)).item, buffercount)
		end

	wtmpnam (buffer: STRING_32): POINTER 
		do
			Result := c_wtmpnam ( (create {NATIVE_STRING}.make (buffer)).item)
		end

	fgetwc_nolock (stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_fgetwc_nolock (stream.item)
		end

	fputwc_nolock (character: CHARACTER_32; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_fputwc_nolock (character.code, stream.item)
		end

	getwc_nolock (stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_getwc_nolock (stream.item)
		end

	putwc_nolock (character: CHARACTER_32; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_putwc_nolock (character.code, stream.item)
		end

	ungetwc_nolock (character: INTEGER; stream: _IOBUF_STRUCT_API): INTEGER 
		do
			Result := c_ungetwc_nolock (character, stream.item)
		end

	stdio_common_vfwprintf (options: INTEGER; stream: _IOBUF_STRUCT_API; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vfwprintf (options, stream.item,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vfwprintf_s (options: INTEGER; stream: _IOBUF_STRUCT_API; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vfwprintf_s (options, stream.item,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vfwprintf_p (options: INTEGER; stream: _IOBUF_STRUCT_API; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vfwprintf_p (options, stream.item,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vfwscanf (options: INTEGER; stream: _IOBUF_STRUCT_API; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vfwscanf (options, stream.item,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vswprintf (options: INTEGER; buffer: STRING_32; buffercount: INTEGER; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vswprintf (options,  (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vswprintf_s (options: INTEGER; buffer: STRING_32; buffercount: INTEGER; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vswprintf_s (options,  (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vsnwprintf_s (options: INTEGER; buffer: STRING_32; buffercount: INTEGER; maxcount: INTEGER; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vsnwprintf_s (options,  (create {NATIVE_STRING}.make (buffer)).item, buffercount, maxcount,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	stdio_common_vswprintf_p (options: INTEGER; buffer: STRING_32; buffercount: INTEGER; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vswprintf_p (options,  (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

	snwprintf (buffer: STRING_32; buffercount: INTEGER; format: STRING_32): INTEGER 
		do
			Result := c_snwprintf ( (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item)
		end

	vsnwprintf (buffer: STRING_32; buffercount: INTEGER; format: STRING_32; args: STRING): INTEGER 
		do
			Result := c_vsnwprintf ( (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item,  (create {C_STRING}.make (args)).item)
		end

	swprintf_l (buffer: STRING_32; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API): INTEGER 
		do
			Result := c_swprintf_l ( (create {NATIVE_STRING}.make (buffer)).item,  (create {NATIVE_STRING}.make (format)).item, locale.item)
		end

	vswprintf_l (buffer: STRING_32; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; args: STRING): INTEGER 
		do
			Result := c_vswprintf_l ( (create {NATIVE_STRING}.make (buffer)).item,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (args)).item)
		end

	swprintf (buffer: STRING_32; format: STRING_32): INTEGER 
		do
			Result := c_swprintf ( (create {NATIVE_STRING}.make (buffer)).item,  (create {NATIVE_STRING}.make (format)).item)
		end

	vswprintf (buffer: STRING_32; format: STRING_32; args: STRING): INTEGER 
		do
			Result := c_vswprintf ( (create {NATIVE_STRING}.make (buffer)).item,  (create {NATIVE_STRING}.make (format)).item,  (create {C_STRING}.make (args)).item)
		end

	stdio_common_vswscanf (options: INTEGER; buffer: STRING_32; buffercount: INTEGER; format: STRING_32; locale: __CRT_LOCALE_POINTERS_STRUCT_API; arglist: STRING): INTEGER 
		do
			Result := c_stdio_common_vswscanf (options,  (create {NATIVE_STRING}.make (buffer)).item, buffercount,  (create {NATIVE_STRING}.make (format)).item, locale.item,  (create {C_STRING}.make (arglist)).item)
		end

feature -- Externals

	c_fgetwc (stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return fgetwc ((FILE*)$stream);
			]"
		end

	c_fputwc (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return fputwc ((wchar_t)$character, (FILE*)$stream);
			]"
		end

	c_getwc (stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return getwc ((FILE*)$stream);
			]"
		end

	c_fgetws (buffer: POINTER; buffercount: INTEGER; stream: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return fgetws ((wchar_t*)$buffer, (int)$buffercount, (FILE*)$stream);
			]"
		end

	c_fputws (buffer: POINTER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return fputws ((wchar_t const*)$buffer, (FILE*)$stream);
			]"
		end

	c_getws_s (buffer: POINTER; buffercount: INTEGER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _getws_s ((wchar_t*)$buffer, (size_t)$buffercount);
			]"
		end

	c_putwc (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return putwc ((wchar_t)$character, (FILE*)$stream);
			]"
		end

	c_putws (buffer: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _putws ((wchar_t const*)$buffer);
			]"
		end

	c_ungetwc (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return ungetwc ((wint_t)$character, (FILE*)$stream);
			]"
		end

	c_wfdopen (filehandle: INTEGER; mode: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfdopen ((int)$filehandle, (wchar_t const*)$mode);
			]"
		end

	c_wfopen (filename: POINTER; mode: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfopen ((wchar_t const*)$filename, (wchar_t const*)$mode);
			]"
		end

	c_wfopen_s (stream: POINTER; filename: POINTER; mode: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfopen_s ((FILE**)$stream, (wchar_t const*)$filename, (wchar_t const*)$mode);
			]"
		end

	c_wfreopen (filename: POINTER; mode: POINTER; oldstream: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfreopen ((wchar_t const*)$filename, (wchar_t const*)$mode, (FILE*)$oldstream);
			]"
		end

	c_wfreopen_s (stream: POINTER; filename: POINTER; mode: POINTER; oldstream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfreopen_s ((FILE**)$stream, (wchar_t const*)$filename, (wchar_t const*)$mode, (FILE*)$oldstream);
			]"
		end

	c_wfsopen (filename: POINTER; mode: POINTER; shflag: INTEGER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wfsopen ((wchar_t const*)$filename, (wchar_t const*)$mode, (int)$shflag);
			]"
		end

	c_wperror (errormessage: POINTER)
		external
			"C inline use <plplot.h>"
		alias
			"[
				_wperror ((wchar_t const*)$errormessage);
			]"
		end

	c_wpopen (command: POINTER; mode: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wpopen ((wchar_t const*)$command, (wchar_t const*)$mode);
			]"
		end

	c_wremove (filename: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wremove ((wchar_t const*)$filename);
			]"
		end

	c_wtempnam (directory: POINTER; fileprefix: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wtempnam ((wchar_t const*)$directory, (wchar_t const*)$fileprefix);
			]"
		end

	c_wtmpnam_s (buffer: POINTER; buffercount: INTEGER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wtmpnam_s ((wchar_t*)$buffer, (size_t)$buffercount);
			]"
		end

	c_wtmpnam (buffer: POINTER): POINTER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _wtmpnam ((wchar_t*)$buffer);
			]"
		end

	c_fgetwc_nolock (stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _fgetwc_nolock ((FILE*)$stream);
			]"
		end

	c_fputwc_nolock (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _fputwc_nolock ((wchar_t)$character, (FILE*)$stream);
			]"
		end

	c_getwc_nolock (stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _getwc_nolock ((FILE*)$stream);
			]"
		end

	c_putwc_nolock (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _putwc_nolock ((wchar_t)$character, (FILE*)$stream);
			]"
		end

	c_ungetwc_nolock (character: INTEGER; stream: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _ungetwc_nolock ((wint_t)$character, (FILE*)$stream);
			]"
		end

	c_stdio_common_vfwprintf (options: INTEGER; stream: POINTER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vfwprintf ((unsigned __int64)$options, (FILE*)$stream, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vfwprintf_s (options: INTEGER; stream: POINTER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vfwprintf_s ((unsigned __int64)$options, (FILE*)$stream, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vfwprintf_p (options: INTEGER; stream: POINTER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vfwprintf_p ((unsigned __int64)$options, (FILE*)$stream, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vfwscanf (options: INTEGER; stream: POINTER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vfwscanf ((unsigned __int64)$options, (FILE*)$stream, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vswprintf (options: INTEGER; buffer: POINTER; buffercount: INTEGER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vswprintf ((unsigned __int64)$options, (wchar_t*)$buffer, (size_t)$buffercount, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vswprintf_s (options: INTEGER; buffer: POINTER; buffercount: INTEGER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vswprintf_s ((unsigned __int64)$options, (wchar_t*)$buffer, (size_t)$buffercount, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vsnwprintf_s (options: INTEGER; buffer: POINTER; buffercount: INTEGER; maxcount: INTEGER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vsnwprintf_s ((unsigned __int64)$options, (wchar_t*)$buffer, (size_t)$buffercount, (size_t)$maxcount, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_stdio_common_vswprintf_p (options: INTEGER; buffer: POINTER; buffercount: INTEGER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vswprintf_p ((unsigned __int64)$options, (wchar_t*)$buffer, (size_t)$buffercount, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

	c_snwprintf (buffer: POINTER; buffercount: INTEGER; format: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _snwprintf ((wchar_t*)$buffer, (size_t)$buffercount, (wchar_t const*)$format);
			]"
		end

	c_vsnwprintf (buffer: POINTER; buffercount: INTEGER; format: POINTER; args: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _vsnwprintf ((wchar_t*)$buffer, (size_t)$buffercount, (wchar_t const*)$format, (va_list)$args);
			]"
		end

	c_swprintf_l (buffer: POINTER; format: POINTER; locale: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __swprintf_l ((wchar_t*)$buffer, (wchar_t const*)$format, (_locale_t)$locale);
			]"
		end

	c_vswprintf_l (buffer: POINTER; format: POINTER; locale: POINTER; args: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __vswprintf_l ((wchar_t*)$buffer, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$args);
			]"
		end

	c_swprintf (buffer: POINTER; format: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _swprintf ((wchar_t*)$buffer, (wchar_t const*)$format);
			]"
		end

	c_vswprintf (buffer: POINTER; format: POINTER; args: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return _vswprintf ((wchar_t*)$buffer, (wchar_t const*)$format, (va_list)$args);
			]"
		end

	c_stdio_common_vswscanf (options: INTEGER; buffer: POINTER; buffercount: INTEGER; format: POINTER; locale: POINTER; arglist: POINTER): INTEGER
		external
			"C inline use <plplot.h>"
		alias
			"[
				return __stdio_common_vswscanf ((unsigned __int64)$options, (wchar_t const*)$buffer, (size_t)$buffercount, (wchar_t const*)$format, (_locale_t)$locale, (va_list)$arglist);
			]"
		end

feature -- Externals Address

end
