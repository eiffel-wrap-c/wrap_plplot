note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PLF_GRID2_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	f: POINTER
			-- Access member `f`
		require
			exists: exists
		do
			Result := c_f (item)
		ensure
			result_correct: Result = c_f (item)
		end

	set_f (a_value: POINTER) 
			-- Change the value of member `f` to `a_value`.
		require
			exists: exists
		do
			set_c_f (item, a_value)
		ensure
			f_set: a_value = f
		end

	nx: INTEGER
			-- Access member `nx`
		require
			exists: exists
		do
			Result := c_nx (item)
		ensure
			result_correct: Result = c_nx (item)
		end

	set_nx (a_value: INTEGER) 
			-- Change the value of member `nx` to `a_value`.
		require
			exists: exists
		do
			set_c_nx (item, a_value)
		ensure
			nx_set: a_value = nx
		end

	ny: INTEGER
			-- Access member `ny`
		require
			exists: exists
		do
			Result := c_ny (item)
		ensure
			result_correct: Result = c_ny (item)
		end

	set_ny (a_value: INTEGER) 
			-- Change the value of member `ny` to `a_value`.
		require
			exists: exists
		do
			set_c_ny (item, a_value)
		ensure
			ny_set: a_value = ny
		end

feature {NONE} -- Implementation wrapper for struct PLfGrid2

	sizeof_external: INTEGER 
		external
			"C inline use <plplot.h>"
		alias
			"sizeof(PLfGrid2)"
		end

	c_f (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->f
			]"
		end

	set_c_f (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->f =  (PLFLT_NC_MATRIX)$a_value
			]"
		ensure
			f_set: a_value = c_f (an_item)
		end

	c_nx (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->nx
			]"
		end

	set_c_nx (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->nx =  (PLINT)$a_value
			]"
		ensure
			nx_set: a_value = c_nx (an_item)
		end

	c_ny (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->ny
			]"
		end

	set_c_ny (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLfGrid2*)$an_item)->ny =  (PLINT)$a_value
			]"
		ensure
			ny_set: a_value = c_ny (an_item)
		end

end
